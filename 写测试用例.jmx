<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="写测试用例" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="写用例" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用例路径设置" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="AbsolutePath" elementType="Argument">
              <stringProp name="Argument.name">AbsolutePath</stringProp>
              <stringProp name="Argument.value">E:\\AUTO\\CsvData</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="工作日 - 正常初始化" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.60.44</stringProp>
          <stringProp name="HTTPSampler.port">5001</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/bems/mdm/workday/P005</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">主数据管理</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="去掉说明字段" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">String requestBody = ctx.getCurrentSampler().getArguments().getArgument(0).getValue().replaceAll(&quot;\\$\\(.*\\)&quot;,&quot;&quot;);;
ctx.getCurrentSampler().getArguments().getArgument(0).setValue(requestBody);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Body写入用例脚本" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult;
import com.api.cases.GetCaseInfo;
import java.io.*;

String requestBody = ctx.getCurrentSampler().getArguments().getArgument(0).getValue().replaceAll(&quot;\\$\\(.*\\)&quot;,&quot;&quot;);
String requestName = ctx.getCurrentSampler().getName();
String comment = ctx.getCurrentSampler().getComment();
String AbsolutePath = vars.get(&quot;AbsolutePath&quot;);
GetCaseInfo.writeCaseIntoFile(AbsolutePath,comment,prev.getUrlAsString(),requestName,requestBody,prev.getResponseCode(),prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除 负数" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.60.44</stringProp>
          <stringProp name="HTTPSampler.port">5001</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/bems/mdm/country/P002/-1</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">主数据管理</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Path&amp;Query写入用例脚本" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult;
import com.api.cases.GetCaseInfo;
import java.io.*;

String url = prev.getUrlAsString();
String parameter = null;
if(url.indexOf(&quot;?&quot;)&gt;0){
	parameter = url.substring(url.lastIndexOf(&quot;?&quot;)+1,url.length());
}else{
	parameter = url.substring(url.lastIndexOf(&quot;/&quot;)+1,url.length());
}
String requestName = ctx.getCurrentSampler().getName();
String comment = ctx.getCurrentSampler().getComment();
String AbsolutePath = vars.get(&quot;AbsolutePath&quot;);

GetCaseInfo.writeCaseIntoFile(AbsolutePath,comment,prev.getUrlAsString(),requestName,parameter,prev.getResponseCode(),prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="测试文件上传用例" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="${FilePath}" elementType="HTTPFileArg">
                <stringProp name="File.path">${FilePath}</stringProp>
                <stringProp name="File.paramname">file</stringProp>
                <stringProp name="File.mimetype">multipart/form-data</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.60.44</stringProp>
          <stringProp name="HTTPSampler.port">5001</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/bems/mdm/person/import/P005</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">主数据管理</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="上传文件路径设置" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FilePath" elementType="Argument">
                <stringProp name="Argument.name">FilePath</stringProp>
                <stringProp name="Argument.value">C:\Users\user\Desktop\test.xlsx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="bpmnFile" elementType="Argument">
                <stringProp name="Argument.name">bpmnFile</stringProp>
                <stringProp name="Argument.value">C:\Users\user\Desktop\test.xlsx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="File写入用例脚本" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult;
import com.api.cases.GetCaseInfo;
import java.io.*;

String requestBody = vars.get(&quot;FilePath&quot;);
String requestName = ctx.getCurrentSampler().getName();
String comment = ctx.getCurrentSampler().getComment();
String AbsolutePath = vars.get(&quot;AbsolutePath&quot;);

GetCaseInfo.writeCaseIntoFile(AbsolutePath,comment,prev.getUrlAsString(),requestName,requestBody,prev.getResponseCode(),prev.getResponseDataAsString());</stringProp>
            <stringProp name="TestPlan.comments">用例名</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="数据清理" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.60.44</stringProp>
          <stringProp name="HTTPSampler.port">5001</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="主数据管理 - 国家" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="获取用例信息" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.text.*;
import java.io.*;
import java.util.*;
import org.apache.jmeter.services.FileServer;
import com.api.cases.GetCaseInfo;

StringBuffer strBuf = new StringBuffer();

strBuf.append(FileServer.getFileServer().getBaseDir());
strBuf.append(&quot;\\\&quot;+vars.get(&quot;CASEPATH&quot;));
strBuf.append(&quot;\\\&quot;+vars.get(&quot;GROUP&quot;));
strBuf.append(&quot;\\\&quot;+vars.get(&quot;SUB_GROUP&quot;));
strBuf.append(&quot;\\clearData.csv&quot;));
strBuf.append(&quot;_&quot;+vars.get(&quot;API&quot;)+&quot;.csv&quot;);

String filename = strBuf.toString();
ArrayList strList = new ArrayList();     

try {
	
    File file = new File(filename);

    if (!file.exists()) {
    	   vars.put(&quot;VARS&quot;,&quot;STOP&quot;);
        throw new Exception (&quot;ERROR: file &quot; + filename + &quot; not found&quot;);
    }

    BufferedReader bufRdr = new BufferedReader(new InputStreamReader(new FileInputStream(file), &quot;UTF8&quot;));
    String line = null;
    Integer i = 0;

    while((line = bufRdr.readLine()) != null) {
        strList.add(line);
        i++;
    }
    
    vars.put(&quot;TAG&quot;,&quot;PASS&quot;);
    if(i==1){
    	vars.put(&quot;TAG&quot;,&quot;STOP&quot;);
    	vars.put(&quot;VARS&quot;,&quot;STOP&quot;);
    }

    bufRdr.close();            
//	log.info(&quot;loop time11:&quot;+String.valueOf(${__jm__SUBGROUP__idx}+1)+&quot;thread time11:&quot;+String.valueOf(${__threadNum}));
//	log.info(vars.get(&quot;API_NAME&quot;)+&quot;:总case数量&quot;+String.valueOf(i));

    int counters = (${__jm__SUBGROUP__idx});

    if ((counters &lt;= i)&amp;&amp;(i!=1)) {
    	
	    String[] variables = strList.get(counters).split(&quot;;&quot;);
	    vars.put(&quot;CASE_NAME&quot;,variables[0]);
	    vars.put(&quot;CASE_BODY&quot;,GetCaseInfo.getJsonWithFormat(variables[1]));
//	    vars.put(&quot;CASE_BODY&quot;,variables[1]);
//	    vars.put(&quot;CASE_BODY&quot;,variables[1].substring(1,variables[1].length()-1).replace(&quot;\&quot;\&quot;&quot;,&quot;\&quot;&quot;));
	    vars.put(&quot;CASE_CODE&quot;,variables[2]);
	    
	    vars.put(&quot;CASE_R_CODE&quot;,variables[3]);
	    
	    vars.put(&quot;CASE_R_MSG&quot;,variables[4]);
	    vars.put(&quot;CASE_TEXT&quot;,variables[5]);
	    counters++;
	    vars.put(&quot;counters&quot;,Integer.toString(counters));
	    
    }else{
    		vars.put(&quot;VARS&quot;,&quot;STOP&quot;);
    }

    if(vars.get(&quot;API_TYPE&quot;).equals(&quot;BODY&quot;)){
    	vars.put(&quot;CASE_PARAMETER&quot;,&quot;&quot;);
    }else if(vars.get(&quot;API_TYPE&quot;).equals(&quot;PATH&quot;)){
    	vars.put(&quot;CASE_PARAMETER&quot;,&quot;/&quot;+vars.get(&quot;CASE_BODY&quot;));
    	vars.put(&quot;CASE_BODY&quot;,&quot;&quot;);
    }else if(vars.get(&quot;API_TYPE&quot;).equals(&quot;FORMDATA&quot;)){
    	vars.put(&quot;CASE_PARAMETER&quot;,&quot;&quot;);
    }else if(vars.get(&quot;API_TYPE&quot;).equals(&quot;QUERY&quot;)){
    	vars.put(&quot;CASE_PARAMETER&quot;,&quot;?&quot;+vars.get(&quot;CASE_BODY&quot;));
    	vars.put(&quot;CASE_BODY&quot;,&quot;&quot;);
    }

    if(counters == i){
		vars.put(&quot;VARS&quot;,&quot;STOP&quot;);
    }
}
catch (Exception ex) {
	vars.put(&quot;VARS&quot;,&quot;STOP&quot;);
    IsSuccess = false; 
    log.error(ex.getMessage());
    System.err.println(ex.getMessage());
}
catch (Throwable thex) {
    System.err.println(thex.getMessage());
}
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="国家- 通过条件检索" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bems/mdm/country/search/Q003</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="国家 - 删除数据" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bems/mdm/country/P002</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
